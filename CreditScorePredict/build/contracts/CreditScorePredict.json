{
  "contractName": "CreditScorePredict",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "creditScoreValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_creditScore",
          "type": "uint256"
        }
      ],
      "name": "LogNewScore",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "json",
          "type": "string"
        }
      ],
      "name": "fetchCreditScoreViaProvable",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_queryID",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_queryID\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creditScoreValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"json\",\"type\":\"string\"}],\"name\":\"fetchCreditScoreViaProvable\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_creditScore\",\"type\":\"uint256\"}],\"name\":\"LogNewScore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Heidi/Desktop/CreditScorePredict/CreditScorePredict/contracts/CreditScorePredict.sol\":\"CreditScorePredict\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Heidi/Desktop/CreditScorePredict/CreditScorePredict/contracts/CreditScorePredict.sol\":{\"keccak256\":\"0x62360fbfac2296ff9f140a44d6f7a05fb9d35ac08049b39d9c28e9d18cc9d984\",\"urls\":[\"bzzr://6e0099c9087f6812a7d6d7f3e82503c4a722f78159320b8f8ae68e1c45d4548c\"]},\"/C/Users/Heidi/Desktop/CreditScorePredict/CreditScorePredict/contracts/provableAPI.sol\":{\"keccak256\":\"0x599540b4da2f005e736061a25f83b8effa219b94be0d55a7629cbe29c2710fc9\",\"urls\":[\"bzzr://a3aa925a1c23d31b29abbb5b507d04c108e0b704e74be3eb04cd42d46b8befe1\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060408051808201909152600281527f7b7d00000000000000000000000000000000000000000000000000000000000060208201526200005a9064010000000062000060810204565b62000b4a565b6040805160208082526019908201527f50726f7661626c6520717565727920696e2d666c6967687421000000000000008183015290517fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473899181900360600190a16200016d6040805190810160405280600b81526020017f636f6d7075746174696f6e000000000000000000000000000000000000000000815250606060405190810160405280602e81526020017f516d5879374752487144746752364c41706d696d676669356533474b7977773181526020017f67774d6978695036554b4d5139320000000000000000000000000000000000008152508362000171640100000000026401000000009004565b5050565b600154600090600160a060020a03161580620001aa5750600154620001a890600160a060020a031664010000000062000634810204565b155b15620001c757620001c5600064010000000062000638810204565b505b600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200023457600080fd5b505af115801562000249573d6000803e3d6000fd5b505050506040513d60208110156200026057600080fd5b5051600054600160a060020a039081169116146200033357600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620002e557600080fd5b505af1158015620002fa573d6000803e3d6000fd5b505050506040513d60208110156200031157600080fd5b505160008054600160a060020a031916600160a060020a039092169190911790555b600080546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152885160248401528851600160a060020a039094169363524f3889938a938392604490920191908501908083838b5b83811015620003ae57818101518382015260200162000394565b50505050905090810190601f168015620003dc5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015620003fc57600080fd5b505af115801562000411573d6000803e3d6000fd5b505050506040513d60208110156200042857600080fd5b50519050670de0b6b3a764000062030d403a02018111156200044f5750600090506200062d565b600080546040517f7722865900000000000000000000000000000000000000000000000000000000815260048101838152608060248301908152895160848401528951600160a060020a0390941694637722865994879491938c938c938c936044820191606481019160a49091019060208901908083838d5b83811015620004e2578181015183820152602001620004c8565b50505050905090810190601f168015620005105780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015620005455781810151838201526020016200052b565b50505050905090810190601f168015620005735780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015620005a85781810151838201526020016200058e565b50505050905090810190601f168015620005d65780820380516001836020036101000a031916815260200191505b509750505050505050506020604051808303818588803b158015620005fa57600080fd5b505af11580156200060f573d6000803e3d6000fd5b50505050506040513d60208110156200062757600080fd5b50519150505b9392505050565b3b90565b60006200064d64010000000062000653810204565b92915050565b6000806200067e731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed64010000000062000634810204565b1115620006fc5760018054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e65740000000000000000000000000000000000000000006020820152620006f39064010000000062000a99810204565b50600162000a96565b60006200072673c03a2615d5efaf5f49f60b7bb6583eaec212fdf164010000000062000634810204565b11156200079b5760018054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e3300000000000000000000000000000000000000006020820152620006f39064010000000062000a99810204565b6000620007c573b7a07bcf2ba2f2703b24c0691b5278999c59ac7e64010000000062000634810204565b11156200083a5760018054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e00000000000000000000000000000000000000000000006020820152620006f39064010000000062000a99810204565b60006200086473146500cfd35b22e4a392fe0adc06de1a1368ed4864010000000062000634810204565b1115620008d95760018054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b6562790000000000000000000000000000000000000000006020820152620006f39064010000000062000a99810204565b60006200090373a2998efd205fb9d4b4963afb70778d6354ad3a4164010000000062000634810204565b1115620009785760018054600160a060020a03191673a2998efd205fb9d4b4963afb70778d6354ad3a4117905560408051808201909152600a81527f6574685f676f65726c69000000000000000000000000000000000000000000006020820152620006f39064010000000062000a99810204565b6000620009a2736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47564010000000062000634810204565b1115620009d6575060018054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47517815562000a96565b600062000a007320e12a1f859b3feae5fb2a0a32c18f5a65555bbf64010000000062000634810204565b111562000a34575060018054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf17815562000a96565b600062000a5e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa64010000000062000634810204565b111562000a92575060018054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa17815562000a96565b5060005b90565b80516200016d906002906020840190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000aeb57805160ff191683800117855562000b1b565b8280016001018555821562000b1b579182015b8281111562000b1b57825182559160200191906001019062000afe565b5062000b2992915062000b2d565b5090565b62000a9691905b8082111562000b29576000815560010162000b34565b6110ab8062000b5a6000396000f3fe6080604052600436106100485763ffffffff60e060020a60003504166327dc297e811461004d57806338bbfa5014610109578063439f01441461024a578063ac491d8714610271575b600080fd5b34801561005957600080fd5b506101076004803603604081101561007057600080fd5b8135919081019060408101602082013564010000000081111561009257600080fd5b8201836020820111156100a457600080fd5b803590602001918460018302840111640100000000831117156100c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610317945050505050565b005b34801561011557600080fd5b506101076004803603606081101561012c57600080fd5b8135919081019060408101602082013564010000000081111561014e57600080fd5b82018360208201111561016057600080fd5b8035906020019184600183028401116401000000008311171561018257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156101d557600080fd5b8201836020820111156101e757600080fd5b8035906020019184600183028401116401000000008311171561020957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610337945050505050565b34801561025657600080fd5b5061025f61039a565b60408051918252519081900360200190f35b6101076004803603602081101561028757600080fd5b8101906020810181356401000000008111156102a257600080fd5b8201836020820111156102b457600080fd5b803590602001918460018302840111640100000000831117156102d657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103a0945050505050565b6040805160008152602081019091526103339083908390610337565b5050565b61033f61049c565b600160a060020a0316331461035357600080fd5b61035e82600261068f565b600581905560408051918252517fe2bfe242077230af3e6a33aabbceba1f745a22384200fc4ee1dbb4d1ab3ddb529181900360200190a1505050565b60055481565b6040805160208082526019908201527f50726f7661626c6520717565727920696e2d666c6967687421000000000000008183015290517fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473899181900360600190a16103336040805190810160405280600b81526020017f636f6d7075746174696f6e000000000000000000000000000000000000000000815250606060405190810160405280602e81526020017f516d5879374752487144746752364c41706d696d676669356533474b7977773181526020017f67774d6978695036554b4d513932000000000000000000000000000000000000815250836107bd565b600154600090600160a060020a031615806104c957506001546104c790600160a060020a0316610c1b565b155b156104da576104d86000610c1f565b505b600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b505050506040513d602081101561055757600080fd5b5051600054600160a060020a0390811691161461060d57600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b505050506040513d60208110156105eb57600080fd5b505160008054600160a060020a031916600160a060020a039092169190911790555b6000809054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d602081101561068757600080fd5b505190505b90565b6000828180805b83518110156107a157603084828151811015156106af57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff16101580156107055750603984828151811015156106e557fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1611155b156107615781156107245785151561071c576107a1565b600019909501945b600a830292506030848281518110151561073a57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff160383019250610799565b838181518110151561076f57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff16602e141561079957600191505b600101610696565b5060008511156107b45784600a0a820291505b50949350505050565b600154600090600160a060020a031615806107ea57506001546107e890600160a060020a0316610c1b565b155b156107fb576107f96000610c1f565b505b600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b505050506040513d602081101561087857600080fd5b5051600054600160a060020a0390811691161461092e57600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156108e257600080fd5b505af11580156108f6573d6000803e3d6000fd5b505050506040513d602081101561090c57600080fd5b505160008054600160a060020a031916600160a060020a039092169190911790555b600080546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152885160248401528851600160a060020a039094169363524f3889938a938392604490920191908501908083838b5b838110156109a757818101518382015260200161098f565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b505050506040513d6020811015610a1d57600080fd5b50519050670de0b6b3a764000062030d403a0201811115610a42575060009050610c14565b600080546040517f7722865900000000000000000000000000000000000000000000000000000000815260048101838152608060248301908152895160848401528951600160a060020a0390941694637722865994879491938c938c938c936044820191606481019160a49091019060208901908083838d5b83811015610ad3578181015183820152602001610abb565b50505050905090810190601f168015610b005780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015610b33578181015183820152602001610b1b565b50505050905090810190601f168015610b605780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015610b93578181015183820152602001610b7b565b50505050905090810190601f168015610bc05780820380516001836020036101000a031916815260200191505b509750505050505050506020604051808303818588803b158015610be357600080fd5b505af1158015610bf7573d6000803e3d6000fd5b50505050506040513d6020811015610c0e57600080fd5b50519150505b9392505050565b3b90565b6000610c29610c2f565b92915050565b600080610c4f731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610c1b565b1115610cc05760018054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e65740000000000000000000000000000000000000000006020820152610cb890610fd9565b50600161068c565b6000610cdf73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610c1b565b1115610d485760018054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e3300000000000000000000000000000000000000006020820152610cb890610fd9565b6000610d6773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610c1b565b1115610dd05760018054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e00000000000000000000000000000000000000000000006020820152610cb890610fd9565b6000610def73146500cfd35b22e4a392fe0adc06de1a1368ed48610c1b565b1115610e585760018054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b6562790000000000000000000000000000000000000000006020820152610cb890610fd9565b6000610e7773a2998efd205fb9d4b4963afb70778d6354ad3a41610c1b565b1115610ee05760018054600160a060020a03191673a2998efd205fb9d4b4963afb70778d6354ad3a4117905560408051808201909152600a81527f6574685f676f65726c69000000000000000000000000000000000000000000006020820152610cb890610fd9565b6000610eff736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610c1b565b1115610f31575060018054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47517815561068c565b6000610f507320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610c1b565b1115610f82575060018054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf17815561068c565b6000610fa17351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610c1b565b1115610fd3575060018054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa17815561068c565b50600090565b8051610333906002906020840190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061102857805160ff1916838001178555611055565b82800160010185558215611055579182015b8281111561105557825182559160200191906001019061103a565b50611061929150611065565b5090565b61068c91905b80821115611061576000815560010161106b56fea165627a7a7230582029509b13d20820f77bc1d53480d386e09210409b053838842fe4edc2e7e710e90029",
  "deployedBytecode": "0x6080604052600436106100485763ffffffff60e060020a60003504166327dc297e811461004d57806338bbfa5014610109578063439f01441461024a578063ac491d8714610271575b600080fd5b34801561005957600080fd5b506101076004803603604081101561007057600080fd5b8135919081019060408101602082013564010000000081111561009257600080fd5b8201836020820111156100a457600080fd5b803590602001918460018302840111640100000000831117156100c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610317945050505050565b005b34801561011557600080fd5b506101076004803603606081101561012c57600080fd5b8135919081019060408101602082013564010000000081111561014e57600080fd5b82018360208201111561016057600080fd5b8035906020019184600183028401116401000000008311171561018257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156101d557600080fd5b8201836020820111156101e757600080fd5b8035906020019184600183028401116401000000008311171561020957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610337945050505050565b34801561025657600080fd5b5061025f61039a565b60408051918252519081900360200190f35b6101076004803603602081101561028757600080fd5b8101906020810181356401000000008111156102a257600080fd5b8201836020820111156102b457600080fd5b803590602001918460018302840111640100000000831117156102d657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103a0945050505050565b6040805160008152602081019091526103339083908390610337565b5050565b61033f61049c565b600160a060020a0316331461035357600080fd5b61035e82600261068f565b600581905560408051918252517fe2bfe242077230af3e6a33aabbceba1f745a22384200fc4ee1dbb4d1ab3ddb529181900360200190a1505050565b60055481565b6040805160208082526019908201527f50726f7661626c6520717565727920696e2d666c6967687421000000000000008183015290517fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c473899181900360600190a16103336040805190810160405280600b81526020017f636f6d7075746174696f6e000000000000000000000000000000000000000000815250606060405190810160405280602e81526020017f516d5879374752487144746752364c41706d696d676669356533474b7977773181526020017f67774d6978695036554b4d513932000000000000000000000000000000000000815250836107bd565b600154600090600160a060020a031615806104c957506001546104c790600160a060020a0316610c1b565b155b156104da576104d86000610c1f565b505b600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b505050506040513d602081101561055757600080fd5b5051600054600160a060020a0390811691161461060d57600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b505050506040513d60208110156105eb57600080fd5b505160008054600160a060020a031916600160a060020a039092169190911790555b6000809054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d602081101561068757600080fd5b505190505b90565b6000828180805b83518110156107a157603084828151811015156106af57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff16101580156107055750603984828151811015156106e557fe5b90602001015160f860020a900460f860020a0260f860020a900460ff1611155b156107615781156107245785151561071c576107a1565b600019909501945b600a830292506030848281518110151561073a57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff160383019250610799565b838181518110151561076f57fe5b90602001015160f860020a900460f860020a0260f860020a900460ff16602e141561079957600191505b600101610696565b5060008511156107b45784600a0a820291505b50949350505050565b600154600090600160a060020a031615806107ea57506001546107e890600160a060020a0316610c1b565b155b156107fb576107f96000610c1f565b505b600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b505050506040513d602081101561087857600080fd5b5051600054600160a060020a0390811691161461092e57600160009054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156108e257600080fd5b505af11580156108f6573d6000803e3d6000fd5b505050506040513d602081101561090c57600080fd5b505160008054600160a060020a031916600160a060020a039092169190911790555b600080546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152885160248401528851600160a060020a039094169363524f3889938a938392604490920191908501908083838b5b838110156109a757818101518382015260200161098f565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b505050506040513d6020811015610a1d57600080fd5b50519050670de0b6b3a764000062030d403a0201811115610a42575060009050610c14565b600080546040517f7722865900000000000000000000000000000000000000000000000000000000815260048101838152608060248301908152895160848401528951600160a060020a0390941694637722865994879491938c938c938c936044820191606481019160a49091019060208901908083838d5b83811015610ad3578181015183820152602001610abb565b50505050905090810190601f168015610b005780820380516001836020036101000a031916815260200191505b50848103835286518152865160209182019188019080838360005b83811015610b33578181015183820152602001610b1b565b50505050905090810190601f168015610b605780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015610b93578181015183820152602001610b7b565b50505050905090810190601f168015610bc05780820380516001836020036101000a031916815260200191505b509750505050505050506020604051808303818588803b158015610be357600080fd5b505af1158015610bf7573d6000803e3d6000fd5b50505050506040513d6020811015610c0e57600080fd5b50519150505b9392505050565b3b90565b6000610c29610c2f565b92915050565b600080610c4f731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610c1b565b1115610cc05760018054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e65740000000000000000000000000000000000000000006020820152610cb890610fd9565b50600161068c565b6000610cdf73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610c1b565b1115610d485760018054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e3300000000000000000000000000000000000000006020820152610cb890610fd9565b6000610d6773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610c1b565b1115610dd05760018054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e00000000000000000000000000000000000000000000006020820152610cb890610fd9565b6000610def73146500cfd35b22e4a392fe0adc06de1a1368ed48610c1b565b1115610e585760018054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b6562790000000000000000000000000000000000000000006020820152610cb890610fd9565b6000610e7773a2998efd205fb9d4b4963afb70778d6354ad3a41610c1b565b1115610ee05760018054600160a060020a03191673a2998efd205fb9d4b4963afb70778d6354ad3a4117905560408051808201909152600a81527f6574685f676f65726c69000000000000000000000000000000000000000000006020820152610cb890610fd9565b6000610eff736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610c1b565b1115610f31575060018054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47517815561068c565b6000610f507320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610c1b565b1115610f82575060018054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf17815561068c565b6000610fa17351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610c1b565b1115610fd3575060018054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa17815561068c565b50600090565b8051610333906002906020840190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061102857805160ff1916838001178555611055565b82800160010185558215611055579182015b8281111561105557825182559160200191906001019061103a565b50611061929150611065565b5090565b61068c91905b80821115611061576000815560010161106b56fea165627a7a7230582029509b13d20820f77bc1d53480d386e09210409b053838842fe4edc2e7e710e90029",
  "sourceMap": "53:874:0:-;;;241:83;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;284:33:0;;;;;;;;;;;;;;;;;;;:27;;;;:33;:::i;:::-;53:874;;330:304;437:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:4;495:14;;;:132;;;:::i;:::-;;330:304;:::o;17599:384:2:-;11870:3;;17722:11;;-1:-1:-1;;;;;11870:3:2;11862:26;;11861:64;;-1:-1:-1;11914:3:2;;11894:25;;-1:-1:-1;;;;;11914:3:2;11894:11;;;;:25;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;;:35;:::i;:::-;;11857:130;12021:3;;;;;;;;;-1:-1:-1;;;;;12021:3:2;-1:-1:-1;;;;;12021:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12021:16:2;12008:8;;-1:-1:-1;;;;;12008:8:2;;;12000:37;;;11996:106;;12074:3;;;;;;;;;-1:-1:-1;;;;;12074:3:2;-1:-1:-1;;;;;12074:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12074:16:2;12053:8;:38;;-1:-1:-1;;;;;;12053:38:2;-1:-1:-1;;;;;12053:38:2;;;;;;;;;11996:106;17745:10;17758:8;;:30;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17758:8:2;;;;:17;;17776:11;;17758:30;;;;;;;;;;;;;;17745:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17758:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17758:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17758:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17758:30:2;;-1:-1:-1;17810:7:2;17834:6;17820:11;:20;17810:30;17802:38;;17798:104;;;-1:-1:-1;17863:1:2;;-1:-1:-1;17856:8:2;;17798:104;17918:8;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17918:8:2;;;;:15;;17940:5;;17918:8;;17950:11;;17963:5;;17970;;17918:58;;;;;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17918:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17918:58:2;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17918:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17918:58:2;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17918:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17918:58:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17918:58:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17918:58:2;;-1:-1:-1;;12111:1:2;17599:384;;;;;:::o;37338:147::-;37451:18;;37428:51::o;12594:205::-;12659:16;12771:21;:19;;;;:21;:::i;:::-;12764:28;12594:205;-1:-1:-1;;12594:205:2:o;13073:2031::-;13122:16;;13154:55;13166:42;13154:11;;;;:55;:::i;:::-;:59;13150:246;;;13239:3;:69;;-1:-1:-1;;;;;;13239:69:2;13265:42;13239:69;;;13322:38;;;;;;;;;;;;;;;;;;;:23;;;;:38;:::i;:::-;-1:-1:-1;13381:4:2;13374:11;;13150:246;13467:1;13409:55;13421:42;13409:11;;;;:55;:::i;:::-;:59;13405:255;;;13502:3;:69;;-1:-1:-1;;;;;;13502:69:2;13528:42;13502:69;;;13585:39;;;;;;;;;;;;;;;;;;;:23;;;;:39;:::i;13405:255::-;13731:1;13673:55;13685:42;13673:11;;;;:55;:::i;:::-;:59;13669:250;;;13764:3;:69;;-1:-1:-1;;;;;;13764:69:2;13790:42;13764:69;;;13847:36;;;;;;;;;;;;;;;;;;;:23;;;;:36;:::i;13669:250::-;13990:1;13932:55;13944:42;13932:11;;;;:55;:::i;:::-;:59;13928:254;;;14025:3;:69;;-1:-1:-1;;;;;;14025:69:2;14051:42;14025:69;;;14108:38;;;;;;;;;;;;;;;;;;;:23;;;;:38;:::i;13928:254::-;14253:1;14195:55;14207:42;14195:11;;;;:55;:::i;:::-;:59;14191:252;;;14287:3;:69;;-1:-1:-1;;;;;;14287:69:2;14313:42;14287:69;;;14370:37;;;;;;;;;;;;;;;;;;;:23;;;;:37;:::i;14191:252::-;14514:1;14456:55;14468:42;14456:11;;;;:55;:::i;:::-;:59;14452:202;;;-1:-1:-1;14549:3:2;:69;;-1:-1:-1;;;;;;14549:69:2;14575:42;14549:69;;;14632:11;;14452:202;14725:1;14667:55;14679:42;14667:11;;;;:55;:::i;:::-;:59;14663:201;;;-1:-1:-1;14759:3:2;:69;;-1:-1:-1;;;;;;14759:69:2;14785:42;14759:69;;;14842:11;;14663:201;14935:1;14877:55;14889:42;14877:11;;;;:55;:::i;:::-;:59;14873:203;;;-1:-1:-1;14971:3:2;:69;;-1:-1:-1;;;;;;14971:69:2;14997:42;14971:69;;;15054:11;;14873:203;-1:-1:-1;15092:5:2;13073:2031;;:::o;12805:125::-;12886:37;;;;:21;;:37;;;;53:874:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;53:874:0;;;-1:-1:-1;53:874:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "53:874:0:-;;;;;;;;;-1:-1:-1;;;53:874:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;15342:122:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15342:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15342:122:2;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;15342:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15342:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15342:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;15342:122:2;;-1:-1:-1;15342:122:2;;-1:-1:-1;;;;;15342:122:2;;;640:284:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:284:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;640:284:0;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;640:284:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;640:284:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;640:284:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;640:284:0;;;;;;;;-1:-1:-1;640:284:0;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;640:284:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;640:284:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;640:284:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;640:284:0;;-1:-1:-1;640:284:0;;-1:-1:-1;;;;;640:284:0;105:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:31:0;;;;;;;;;;;;;;;;;;;;330:304;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;330:304:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;330:304:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;330:304:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;330:304:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;330:304:0;;-1:-1:-1;330:304:0;;-1:-1:-1;;;;;330:304:0;15342:122:2;15444:12;;;15454:1;15444:12;;;;;;;;15417:40;;15428:5;;15435:7;;15417:10;:40::i;:::-;15342:122;;:::o;640:284:0:-;803:20;:18;:20::i;:::-;-1:-1:-1;;;;;789:34:0;:10;:34;781:43;;;;;;853:20;862:7;871:1;853:8;:20::i;:::-;834:16;:39;;;888:29;;;;;;;;;;;;;;;;640:284;;;:::o;105:31::-;;;;:::o;330:304::-;437:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:4;495:14;:132::i;37202:130:2:-;11870:3;;37262:24;;-1:-1:-1;;;;;11870:3:2;11862:26;;11861:64;;-1:-1:-1;11914:3:2;;11894:25;;-1:-1:-1;;;;;11914:3:2;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;-1:-1:-1;;;;;12021:3:2;-1:-1:-1;;;;;12021:14:2;;:16;;;;;-1:-1:-1;;;12021:16:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12021:16:2;12008:8;;-1:-1:-1;;;;;12008:8:2;;;12000:37;;;11996:106;;12074:3;;;;;;;;;-1:-1:-1;;;;;12074:3:2;-1:-1:-1;;;;;12074:14:2;;:16;;;;;-1:-1:-1;;;12074:16:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12074:16:2;12053:8;:38;;-1:-1:-1;;;;;;12053:38:2;-1:-1:-1;;;;;12053:38:2;;;;;;;;;11996:106;37305:8;;;;;;;;;-1:-1:-1;;;;;37305:8:2;-1:-1:-1;;;;;37305:18:2;;:20;;;;;-1:-1:-1;;;37305:20:2;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37305:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37305:20:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;37305:20:2;;-1:-1:-1;12111:1:2;37202:130;:::o;43022:796::-;43090:15;43146:2;43090:15;;;43213:516;43234:7;:14;43230:1;:18;43213:516;;;43301:2;43285:7;43293:1;43285:10;;;;;;;;;;;;;;;-1:-1:-1;;;43285:10:2;;-1:-1:-1;;;43285:10:2;-1:-1:-1;;;43279:17:2;;43274:23;;:29;;43273:66;;;;;43336:2;43320:7;43328:1;43320:10;;;;;;;;;;;;;;;-1:-1:-1;;;43320:10:2;;-1:-1:-1;;;43320:10:2;-1:-1:-1;;;43314:17:2;;43309:23;;:29;;43273:66;43269:450;;;43363:8;43359:175;;;43398:7;;43394:122;;;43432:5;;43394:122;-1:-1:-1;;43490:4:2;;;;43394:122;43559:2;43551:10;;;;43613:2;43598:7;43606:1;43598:10;;;;;;;;;;;;;;;-1:-1:-1;;;43598:10:2;;-1:-1:-1;;;43598:10:2;-1:-1:-1;;;43592:17:2;;43587:23;;:28;43579:36;;;;43269:450;;;43651:7;43659:1;43651:10;;;;;;;;;;;;;;;-1:-1:-1;;;43651:10:2;;-1:-1:-1;;;43651:10:2;-1:-1:-1;;;43645:17:2;;43640:23;;43667:2;43640:29;43636:83;;;43700:4;43689:15;;43636:83;43250:3;;43213:516;;;;43747:1;43742:2;:6;43738:53;;;43778:2;43772;:8;43764:16;;;;43738:53;-1:-1:-1;43807:4:2;43022:796;-1:-1:-1;;;;43022:796:2:o;17599:384::-;11870:3;;17722:11;;-1:-1:-1;;;;;11870:3:2;11862:26;;11861:64;;-1:-1:-1;11914:3:2;;11894:25;;-1:-1:-1;;;;;11914:3:2;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;-1:-1:-1;;;;;12021:3:2;-1:-1:-1;;;;;12021:14:2;;:16;;;;;-1:-1:-1;;;12021:16:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12021:16:2;12008:8;;-1:-1:-1;;;;;12008:8:2;;;12000:37;;;11996:106;;12074:3;;;;;;;;;-1:-1:-1;;;;;12074:3:2;-1:-1:-1;;;;;12074:14:2;;:16;;;;;-1:-1:-1;;;12074:16:2;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12074:16:2;12053:8;:38;;-1:-1:-1;;;;;;12053:38:2;-1:-1:-1;;;;;12053:38:2;;;;;;;;;11996:106;17745:10;17758:8;;:30;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17758:8:2;;;;:17;;17776:11;;17758:30;;;;;;;;;;;;;;17745:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17758:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17758:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17758:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17758:30:2;;-1:-1:-1;17810:7:2;17834:6;17820:11;:20;17810:30;17802:38;;17798:104;;;-1:-1:-1;17863:1:2;;-1:-1:-1;17856:8:2;;17798:104;17918:8;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17918:8:2;;;;:15;;17940:5;;17918:8;;17950:11;;17963:5;;17970;;17918:58;;;;;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17918:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17918:58:2;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17918:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17918:58:2;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17918:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17918:58:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17918:58:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17918:58:2;;-1:-1:-1;;12111:1:2;17599:384;;;;;:::o;37338:147::-;37451:18;;37428:51::o;12594:205::-;12659:16;12771:21;:19;:21::i;:::-;12764:28;12594:205;-1:-1:-1;;12594:205:2:o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;:55::i;:::-;:59;13150:246;;;13239:3;:69;;-1:-1:-1;;;;;;13239:69:2;13265:42;13239:69;;;13322:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;-1:-1:-1;13381:4:2;13374:11;;13150:246;13467:1;13409:55;13421:42;13409:11;:55::i;:::-;:59;13405:255;;;13502:3;:69;;-1:-1:-1;;;;;;13502:69:2;13528:42;13502:69;;;13585:39;;;;;;;;;;;;;;;;;;;:23;:39::i;13405:255::-;13731:1;13673:55;13685:42;13673:11;:55::i;:::-;:59;13669:250;;;13764:3;:69;;-1:-1:-1;;;;;;13764:69:2;13790:42;13764:69;;;13847:36;;;;;;;;;;;;;;;;;;;:23;:36::i;13669:250::-;13990:1;13932:55;13944:42;13932:11;:55::i;:::-;:59;13928:254;;;14025:3;:69;;-1:-1:-1;;;;;;14025:69:2;14051:42;14025:69;;;14108:38;;;;;;;;;;;;;;;;;;;:23;:38::i;13928:254::-;14253:1;14195:55;14207:42;14195:11;:55::i;:::-;:59;14191:252;;;14287:3;:69;;-1:-1:-1;;;;;;14287:69:2;14313:42;14287:69;;;14370:37;;;;;;;;;;;;;;;;;;;:23;:37::i;14191:252::-;14514:1;14456:55;14468:42;14456:11;:55::i;:::-;:59;14452:202;;;-1:-1:-1;14549:3:2;:69;;-1:-1:-1;;;;;;14549:69:2;14575:42;14549:69;;;14632:11;;14452:202;14725:1;14667:55;14679:42;14667:11;:55::i;:::-;:59;14663:201;;;-1:-1:-1;14759:3:2;:69;;-1:-1:-1;;;;;;14759:69:2;14785:42;14759:69;;;14842:11;;14663:201;14935:1;14877:55;14889:42;14877:11;:55::i;:::-;:59;14873:203;;;-1:-1:-1;14971:3:2;:69;;-1:-1:-1;;;;;;14971:69:2;14997:42;14971:69;;;15054:11;;14873:203;-1:-1:-1;15092:5:2;13073:2031;:::o;12805:125::-;12886:37;;;;:21;;:37;;;;53:874:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;53:874:0;;;-1:-1:-1;53:874:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.0;\n\nimport \"./provableAPI.sol\";\n\ncontract CreditScorePredict is usingProvable {\n\n    uint256 public creditScoreValue;\n\n    event LogNewScore(uint256 _creditScore);\n    event LogNewProvableQuery(string _description);\n\n    constructor()\n        public\n    {\n        fetchCreditScoreViaProvable('{}');\n    }\n\n    function fetchCreditScoreViaProvable(string memory json)\n        public\n        payable\n    {\n        emit LogNewProvableQuery(\"Provable query in-flight!\");\n        provable_query(\n            \"computation\",\n            \"QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92\",\n             json\n        );\n    }\n\n    function __callback(\n        bytes32 _queryID,\n        string memory _result,\n        bytes memory _proof\n    )\n        public\n    {\n        require(msg.sender == provable_cbAddress());\n        creditScoreValue = parseInt(_result, 2);\n        emit LogNewScore(creditScoreValue);\n    }\n\n}\n\n\n\n// pragma solidity 0.5.0;\n\n// import \"./provableAPI.sol\";\n\n// contract CreditScorePredict is usingProvable {\n\n//     uint256 public creditScoreValue;\n\n//     event LogNewScore(uint256 _creditScore);\n//     event LogNewProvableQuery(string _description);\n\n//     constructor()\n//         public\n//     {\n//         fetchCreditScoreViaProvable();\n//     }\n\n//     function fetchCreditScoreViaProvable()\n//         public\n//         payable\n//     {\n//         emit LogNewProvableQuery(\"Provable query in-flight!\");\n//         provable_query(\"computation\",\n//                        \"QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92\");     \n//     }\n\n//     function __callback(\n//         bytes32 _queryID,\n//         string memory _result,\n//         bytes memory _proof\n//     )\n//         public\n//     {\n//         require(msg.sender == provable_cbAddress());\n//         creditScoreValue = parseInt(_result, 2);\n//         emit LogNewScore(creditScoreValue);\n//     }\n\n// }\n",
  "sourcePath": "C:\\Users\\Heidi\\Desktop\\CreditScorePredict\\CreditScorePredict\\contracts\\CreditScorePredict.sol",
  "ast": {
    "absolutePath": "/C/Users/Heidi/Desktop/CreditScorePredict/CreditScorePredict/contracts/CreditScorePredict.sol",
    "exportedSymbols": {
      "CreditScorePredict": [
        68
      ]
    },
    "id": 69,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/C/Users/Heidi/Desktop/CreditScorePredict/CreditScorePredict/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 69,
        "sourceUnit": 6422,
        "src": "24:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6421,
              "src": "84:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6421",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:0"
          }
        ],
        "contractDependencies": [
          6421
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 68,
        "linearizedBaseContracts": [
          68,
          6421
        ],
        "name": "CreditScorePredict",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "creditScoreValue",
            "nodeType": "VariableDeclaration",
            "scope": 68,
            "src": "105:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "105:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10,
            "name": "LogNewScore",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "_creditScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "161:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "160:22:0"
            },
            "src": "143:40:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "214:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:21:0"
            },
            "src": "188:47:0"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "274:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7b7d",
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "312:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b48d38f93eaa084033fc5970bf96e559c33c4cdc07d889ab00b4d63f9590739d",
                          "typeString": "literal_string \"{}\""
                        },
                        "value": "{}"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b48d38f93eaa084033fc5970bf96e559c33c4cdc07d889ab00b4d63f9590739d",
                          "typeString": "literal_string \"{}\""
                        }
                      ],
                      "id": 17,
                      "name": "fetchCreditScoreViaProvable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "284:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "284:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "284:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:0:0"
            },
            "scope": 68,
            "src": "241:83:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "422:212:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c6520717565727920696e2d666c6967687421",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "457:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28334fcaaaafc9ed5a69bfefeb48cff1be084f1f6c72ec13150b4388f0d5f887",
                          "typeString": "literal_string \"Provable query in-flight!\""
                        },
                        "value": "Provable query in-flight!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_28334fcaaaafc9ed5a69bfefeb48cff1be084f1f6c72ec13150b4388f0d5f887",
                          "typeString": "literal_string \"Provable query in-flight!\""
                        }
                      ],
                      "id": 27,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "437:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "EmitStatement",
                  "src": "432:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6d7075746174696f6e",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "523:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                          "typeString": "literal_string \"computation\""
                        },
                        "value": "computation"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "516d5879374752487144746752364c41706d696d676669356533474b7977773167774d6978695036554b4d513932",
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "550:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1a7a71895250077ef5ee5da25d129cb5cb61fcc1d0ac9dd68e2699124f05477",
                          "typeString": "literal_string \"QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92\""
                        },
                        "value": "QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92"
                      },
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "json",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "613:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                          "typeString": "literal_string \"computation\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1a7a71895250077ef5ee5da25d129cb5cb61fcc1d0ac9dd68e2699124f05477",
                          "typeString": "literal_string \"QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 31,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1248,
                        1291,
                        1338,
                        1383,
                        1427,
                        1473,
                        1523,
                        1571,
                        1619,
                        1669,
                        1723,
                        1775,
                        1812,
                        1852,
                        1895,
                        1935,
                        1980,
                        2028,
                        2079,
                        2127,
                        2180,
                        2236,
                        2295,
                        2351,
                        2412,
                        2476,
                        2543,
                        2607,
                        2676,
                        2748,
                        2823,
                        2895,
                        2943,
                        2993,
                        3047,
                        3099,
                        3136,
                        3176,
                        3219,
                        3259,
                        3304,
                        3352,
                        3403,
                        3451,
                        3504,
                        3560,
                        3619,
                        3675,
                        3736,
                        3800,
                        3867,
                        3931,
                        4000,
                        4072,
                        4147,
                        4219
                      ],
                      "referencedDeclaration": 1427,
                      "src": "495:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "495:132:0"
                }
              ]
            },
            "documentation": null,
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchCreditScoreViaProvable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "json",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "367:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "366:20:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:0:0"
            },
            "scope": 68,
            "src": "330:304:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "771:153:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6436,
                            "src": "789:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "789:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4244,
                            "src": "803:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "803:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "789:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6439,
                        6440
                      ],
                      "referencedDeclaration": 6439,
                      "src": "781:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "781:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "creditScoreValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "834:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 57,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "862:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "871:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 56,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5077,
                          5194
                        ],
                        "referencedDeclaration": 5194,
                        "src": "853:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "853:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "834:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "834:39:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "creditScoreValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "900:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62,
                      "name": "LogNewScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "888:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "888:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "EmitStatement",
                  "src": "883:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "_queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "669:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "695:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "726:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:92:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:0"
            },
            "scope": 68,
            "src": "640:284:0",
            "stateMutability": "nonpayable",
            "superFunction": 1174,
            "visibility": "public"
          }
        ],
        "scope": 69,
        "src": "53:874:0"
      }
    ],
    "src": "0:1905:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Heidi/Desktop/CreditScorePredict/CreditScorePredict/contracts/CreditScorePredict.sol",
    "exportedSymbols": {
      "CreditScorePredict": [
        68
      ]
    },
    "id": 69,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "/C/Users/Heidi/Desktop/CreditScorePredict/CreditScorePredict/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 69,
        "sourceUnit": 6422,
        "src": "24:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6421,
              "src": "84:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6421",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:0"
          }
        ],
        "contractDependencies": [
          6421
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 68,
        "linearizedBaseContracts": [
          68,
          6421
        ],
        "name": "CreditScorePredict",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "creditScoreValue",
            "nodeType": "VariableDeclaration",
            "scope": 68,
            "src": "105:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "105:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10,
            "name": "LogNewScore",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "_creditScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "161:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "160:22:0"
            },
            "src": "143:40:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "214:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:21:0"
            },
            "src": "188:47:0"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "274:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7b7d",
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "312:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b48d38f93eaa084033fc5970bf96e559c33c4cdc07d889ab00b4d63f9590739d",
                          "typeString": "literal_string \"{}\""
                        },
                        "value": "{}"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b48d38f93eaa084033fc5970bf96e559c33c4cdc07d889ab00b4d63f9590739d",
                          "typeString": "literal_string \"{}\""
                        }
                      ],
                      "id": 17,
                      "name": "fetchCreditScoreViaProvable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "284:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "284:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "284:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:0:0"
            },
            "scope": 68,
            "src": "241:83:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "422:212:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c6520717565727920696e2d666c6967687421",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "457:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28334fcaaaafc9ed5a69bfefeb48cff1be084f1f6c72ec13150b4388f0d5f887",
                          "typeString": "literal_string \"Provable query in-flight!\""
                        },
                        "value": "Provable query in-flight!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_28334fcaaaafc9ed5a69bfefeb48cff1be084f1f6c72ec13150b4388f0d5f887",
                          "typeString": "literal_string \"Provable query in-flight!\""
                        }
                      ],
                      "id": 27,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "437:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "EmitStatement",
                  "src": "432:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6d7075746174696f6e",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "523:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                          "typeString": "literal_string \"computation\""
                        },
                        "value": "computation"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "516d5879374752487144746752364c41706d696d676669356533474b7977773167774d6978695036554b4d513932",
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "550:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1a7a71895250077ef5ee5da25d129cb5cb61fcc1d0ac9dd68e2699124f05477",
                          "typeString": "literal_string \"QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92\""
                        },
                        "value": "QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92"
                      },
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "json",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "613:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dfa1c022cd124ec9090fc8f126299892ca6c2d96eb6cf1d99b8d4c7f173728ee",
                          "typeString": "literal_string \"computation\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1a7a71895250077ef5ee5da25d129cb5cb61fcc1d0ac9dd68e2699124f05477",
                          "typeString": "literal_string \"QmXy7GRHqDtgR6LApmimgfi5e3GKyww1gwMixiP6UKMQ92\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 31,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1248,
                        1291,
                        1338,
                        1383,
                        1427,
                        1473,
                        1523,
                        1571,
                        1619,
                        1669,
                        1723,
                        1775,
                        1812,
                        1852,
                        1895,
                        1935,
                        1980,
                        2028,
                        2079,
                        2127,
                        2180,
                        2236,
                        2295,
                        2351,
                        2412,
                        2476,
                        2543,
                        2607,
                        2676,
                        2748,
                        2823,
                        2895,
                        2943,
                        2993,
                        3047,
                        3099,
                        3136,
                        3176,
                        3219,
                        3259,
                        3304,
                        3352,
                        3403,
                        3451,
                        3504,
                        3560,
                        3619,
                        3675,
                        3736,
                        3800,
                        3867,
                        3931,
                        4000,
                        4072,
                        4147,
                        4219
                      ],
                      "referencedDeclaration": 1427,
                      "src": "495:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "495:132:0"
                }
              ]
            },
            "documentation": null,
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchCreditScoreViaProvable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "json",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "367:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "366:20:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:0:0"
            },
            "scope": 68,
            "src": "330:304:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "771:153:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6436,
                            "src": "789:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "789:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4244,
                            "src": "803:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "803:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "789:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6439,
                        6440
                      ],
                      "referencedDeclaration": 6439,
                      "src": "781:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "781:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "creditScoreValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "834:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 57,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "862:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "871:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 56,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5077,
                          5194
                        ],
                        "referencedDeclaration": 5194,
                        "src": "853:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "853:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "834:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "834:39:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "creditScoreValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "900:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62,
                      "name": "LogNewScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "888:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "888:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "EmitStatement",
                  "src": "883:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "_queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "669:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "695:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "726:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:92:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:0"
            },
            "scope": 68,
            "src": "640:284:0",
            "stateMutability": "nonpayable",
            "superFunction": 1174,
            "visibility": "public"
          }
        ],
        "scope": 69,
        "src": "53:874:0"
      }
    ],
    "src": "0:1905:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xf4527748f978254663f1970cded1bec335b763e82854565f4ce1617893f5c077": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_creditScoreValue",
              "type": "uint256"
            }
          ],
          "name": "LogNewCreditScore",
          "type": "event"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event"
        },
        "0x7b64844133be1cf9f7f94f0b3d3b14551922804f666967cd6decf7d4978133ed": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_creditScore",
              "type": "uint256"
            }
          ],
          "name": "LogNewEthPrice",
          "type": "event"
        },
        "0xe2bfe242077230af3e6a33aabbceba1f745a22384200fc4ee1dbb4d1ab3ddb52": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_creditScore",
              "type": "uint256"
            }
          ],
          "name": "LogNewScore",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb7Cb07DE87f0a7507e45d60Ce2d948B940e66Cfe",
      "transactionHash": "0x956674239b7c1d705b6005c19194485d3e87cbefc8e02e4c3ce9b919bf623b71"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-05-04T02:16:00.497Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}